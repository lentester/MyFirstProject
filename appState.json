{"EDITOR_STATE":{"allProjectFiles":{"b18da129-5c15-4b3e-96c1-97ce0e497443":{"id":"b18da129-5c15-4b3e-96c1-97ce0e497443","parent":null,"name":"MyFirstProject","type":"DIRECTORY","isDirectory":true,"children":["e5d47948-2c9c-47e7-8dd3-9a91f0256b80"],"isRemovable":false,"filePath":"MyFirstProject"},"e5d47948-2c9c-47e7-8dd3-9a91f0256b80":{"id":"e5d47948-2c9c-47e7-8dd3-9a91f0256b80","parent":"b18da129-5c15-4b3e-96c1-97ce0e497443","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"MyFirstProject/lambda.js","code":"let AWS = require('aws-sdk');\nconst s3 = new AWS.S3();\nexports.handler = function (event, context, callback) {\n\ts3.listObjects({\n\t\t'Bucket': 'bukky',\n\t\t'MaxKeys': 10,\n\t\t'Prefix': ''\n\t}).promise()\n\t\t.then(data => {\n\t\t\tconsole.log(data);           // successful response\n\t\t\t/*\n\t\t\tdata = {\n\t\t\t Contents: [\n\t\t\t\t{\n\t\t\t\t   ETag: \"\\\\\"70ee1738b6b21e2c8a43f3a5ab0eee71\\\\\"\",\n\t\t\t\t   Key: \"example1.jpg\",\n\t\t\t\t   LastModified: <Date Representation>,\n\t\t\t\t   Owner: {\n\t\t\t\t\t  DisplayName: \"myname\",\n\t\t\t\t\t  ID: \"12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n\t\t\t\t   },\n\t\t\t\t   Size: 11,\n\t\t\t\t   StorageClass: \"STANDARD\"\n\t\t\t\t},\n\t\t\t\t{...}\n\t\t\t*/\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err, err.stack); // an error occurred\n\t\t});\n\n\n\tcallback(null, 'Successfully executed');\n}\n\n/*\ns3.getBucketLocation({\n\t'Bucket': \"bukky\"\n}).promise()\n\t.then(data => {\n\t\tconsole.log(data);           // successful response\n        /*\n        data = {\n            LocationConstraint: \"us-west-2\"\n        }\n        */\n\t})\n\t.catch(err => {\n\t\tconsole.log(err, err.stack); // an error occurred\n\t});\n*/","triggers":[{"resourceName":"apigusEast1mytesttestany","config":{}}],"version":30}},"rootNode":"b18da129-5c15-4b3e-96c1-97ce0e497443","openFiles":["e5d47948-2c9c-47e7-8dd3-9a91f0256b80"],"currentFileId":"e5d47948-2c9c-47e7-8dd3-9a91f0256b80","resources":{"apigusEast1mytesttestany":{"name":"apigusEast1mytesttestany","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":0,"apiName":"mytest","endpointType":"REGIONAL","resourceMode":0,"resourceName":"test","resourcePath":"/test","restMethod":"ANY","proxyIntegration":false,"enableCORS":false,"stageMode":0,"stageName":"Prod"},"globallyEditable":true},"s3bukky":{"name":"s3bukky","type":"S3","config":{"mode":0,"bucket":{"region":"us-east-1","name":"bukky"}},"globallyEditable":false}},"envVariables":[{"lambdaId":"all","varKey":"SIGMA_AWS_ACC_ID","varValue":"","editable":false,"isEditable":false}],"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true,"types":"\n                    declare class RDSQueryParams {\n    instanceIdentifier: string;\n    query: string;\n    inserts: Array<any>\n}\n\ndeclare namespace SL.AWS {\n    class RDS {\n        query(params: RDSQueryParams, callback: Function, connection: any): void;\n\n        beginTransaction(params: any, callback: Function): void;\n    }\n\n    class SQS {\n        receiveAndDeleteMessages(params: any, filteringCallBack: Function, deleteCallBack: Function, errorCallBack: Function): void;\n    }\n}\n"}}},"lambdaId":"e5d47948-2c9c-47e7-8dd3-9a91f0256b80","additionalFiles":[]},"PROJECT_META":{"projectName":"MyFirstProject","projectDescription":"My First Project","projectVersion":"1.0.0","projectRegion":"us-east-1","repoName":"MyFirstProject","repoUrl":"https://github.com/lentester/MyFirstProject","lastSave":1523265671459}}